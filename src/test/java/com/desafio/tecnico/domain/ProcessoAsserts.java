package com.desafio.tecnico.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProcessoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProcessoAllPropertiesEquals(Processo expected, Processo actual) {
        assertProcessoAutoGeneratedPropertiesEquals(expected, actual);
        assertProcessoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProcessoAllUpdatablePropertiesEquals(Processo expected, Processo actual) {
        assertProcessoUpdatableFieldsEquals(expected, actual);
        assertProcessoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProcessoAutoGeneratedPropertiesEquals(Processo expected, Processo actual) {
        assertThat(actual)
            .as("Verify Processo auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProcessoUpdatableFieldsEquals(Processo expected, Processo actual) {
        assertThat(actual)
            .as("Verify Processo relevant properties")
            .satisfies(a -> assertThat(a.getNpu()).as("check npu").isEqualTo(expected.getNpu()))
            .satisfies(a -> assertThat(a.getDataCadastro()).as("check dataCadastro").isEqualTo(expected.getDataCadastro()))
            .satisfies(a -> assertThat(a.getDataVisualizacao()).as("check dataVisualizacao").isEqualTo(expected.getDataVisualizacao()))
            .satisfies(a -> assertThat(a.getMunicipio()).as("check municipio").isEqualTo(expected.getMunicipio()))
            .satisfies(a -> assertThat(a.getUf()).as("check uf").isEqualTo(expected.getUf()))
            .satisfies(a -> assertThat(a.getDocumento()).as("check documento").isEqualTo(expected.getDocumento()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProcessoUpdatableRelationshipsEquals(Processo expected, Processo actual) {
        // empty method
    }
}
